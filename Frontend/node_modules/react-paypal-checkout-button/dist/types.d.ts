import { ReactElement } from 'react';
export declare type IntentOptions = 'CAPTURE' | 'AUTHORIZE';
export declare type OnApproveDataTypes = {
    orderID: string;
    payerID: string;
};
export declare type Payer = {
    address: {
        country_code: string;
    };
    email_address: string;
    name: {
        given_name: string;
        sur_name: string;
    };
    payer_id: string;
};
export declare type OrderObjectTypes = {
    create_time: string;
    id: string;
    intent: string;
    links: Array<object>;
    payer: Payer;
    purchase_units: Array<object>;
};
export declare type PurchaseUnit = {
    description?: string;
    amount: {
        currency?: string;
        value: number;
    };
};
export declare type Size = 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55;
export declare type StylesOptions = {
    layout?: 'vertical' | 'horizontal';
    color?: 'blue' | 'gold' | 'silver' | 'white' | 'black';
    shape?: 'rect' | 'pill';
    height?: Size;
    label?: 'paypal' | 'checkout' | 'buynow' | 'pay' | 'installment';
    tagline?: boolean;
};
export declare type PayPalCheckoutProps = {
    intent?: IntentOptions;
    clientId?: string;
    amount: number;
    currency?: string;
    description?: string;
    buttonStyles?: StylesOptions;
    onSuccess?: (data: OnApproveDataTypes, order: OrderObjectTypes) => void;
    onError?: (error: any) => void;
};
export declare type ErrorContainerProps = {
    errorMessage: string;
    onRetry: () => void;
};
export declare type SpinnerProps = {
    isLoading: boolean;
};
export declare type UsePayPalScriptOptions = {
    clientId?: string;
    currency: string;
    intent?: IntentOptions;
    onError?: (error: any) => void;
    paypalElement: ReactElement | HTMLElement | null | undefined;
};
export declare type UsePayPalCheckoutOptions = PayPalCheckoutProps;
export declare type ButtonState = {
    isLoadingButton: boolean;
    buttonLoaded: boolean;
    errorMessage: string;
};
export declare type UsePayPalCheckoutValues = ButtonState & {
    onRetry: () => void;
    paypalRef: (node: ReactElement | HTMLElement | null | undefined) => void;
};
